<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:DiplomaProject"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:DiplomaProject.ViewModel"
    xmlns:controls="clr-namespace:DiplomaProject.Controls"
    mc:Ignorable="d" x:Class="DiplomaProject.MainWindow"
        Title="MainWindow" x:Name="TheWindow" Height="700" Width="1000">
    <Window.DataContext>
        <viewModel:MainWindowViewModel/>
    </Window.DataContext>
    <DockPanel>
        <Ribbon DockPanel.Dock="Top">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>
                    <RibbonApplicationMenu.AuxiliaryPaneContent>
                        <local:DropboxView DownloadCommand="{Binding OpenFromDropboxCommand}" UploadCommand="{Binding SaveToDropboxCommand}"/>
                    </RibbonApplicationMenu.AuxiliaryPaneContent>
                    <RibbonApplicationMenuItem Header="Открыть" Name="OpenMenuItem" Command="{Binding OpenFileCommand}"/>
                    <RibbonApplicationMenuItem Header="Сохранить" Name="SaveMenuItem" Command="{Binding SaveFileCommand}"/>
                    <RibbonApplicationMenuItem Header="Сохранить как" Name="SaveAsMenuItem" Command="{Binding SaveAsFileCommand}"/>
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab x:Name="HomeTab" 
				Header="Главная">
                <RibbonGroup x:Name="GroupFont" 
					Header="Шрифт" Width="auto" DataContext="{Binding FormattingRibbonGroupViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="RibbonToggleButton">
                                <Setter Property="Padding" Value="15 0"/>
                                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                                <Setter Property="Height" Value="20"/>

                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <RibbonToggleButton Grid.Column="0" Height="20" Label="&#xe1b9;" FontWeight="Bold" Command="{Binding BoldCommand}" IsChecked="{Binding IsBold}"/>
                        <RibbonToggleButton Grid.Row="0" Grid.Column="1" Label="&#xe1b4;" FontStyle="Italic" Command="{Binding ItalicCommand}" IsChecked="{Binding IsItalic}"/>
                        <RibbonToggleButton Grid.Row="0" Grid.Column="2" Label="&#xe1b8;" Command="{Binding UnderlinedCommand}" IsChecked="{Binding IsUnderlined}"/>
                        <local:RibbonToggleButtonGroup Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" >
                            <RibbonToggleButton Label="&#xe1a0;" IsChecked="{Binding IsLeftAlign}"  Command="{Binding LeftAlignCommand}"/>
                            <RibbonToggleButton Label="&#xe1a1;" IsChecked="{Binding IsCenterAlign}" Command="{Binding CenterAlignCommand}"/>
                            <RibbonToggleButton Label="&#xe1a2;" IsChecked="{Binding IsRightAlign}" Command="{Binding RightAlignCommand}"/>
                        </local:RibbonToggleButtonGroup>
                    </Grid>
                </RibbonGroup>
                <RibbonGroup Header="Элементы" DataContext="{Binding ElementsRibbonGroupViewModel}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type RibbonButton}" BasedOn="{StaticResource {x:Type RibbonButton}}">
                                <Setter Property="FontFamily" Value="Segoe UI Symbol"/>

                            </Style>
                        </StackPanel.Resources>
                        <RibbonButton Content="&#xE292;" FontSize="25" Command="{Binding AddUnorderedListCommand}"/>
                        <RibbonButton Command="{Binding AddOrderedListCommand}">
                            <Image Width="30" Source="Assets/OrderedListIcon.png"/>
                        </RibbonButton>
                        <RibbonButton Content="f(x)" FontStyle="Italic"  FontSize="25" Command="{Binding AddFormulaCommand}"/>
                        <RibbonButton Content="&#xE193;" FontSize="25" Command="{Binding AddDrawingCommand}"/>
                        <RibbonButton Command="{Binding AddFromPhoneCommand}">
                            <Image Source="Assets/MobileIcon.png"/>
                        </RibbonButton>
                        <RibbonButton Command="{Binding AddPlotCommand}">
                            <Image Width="30" Source="Assets/PlotIcon.png"/>
                        </RibbonButton>
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup x:Name="StyleGroup" Header="Стили" DataContext="{Binding StylesGroupViewModel}">
                    <controls:StylePicker ItemsSource="{Binding TextStyles}" AddNewStyleCommand="{Binding AddStyleCommand}">
                        <controls:StylePicker.ItemTemplate>
                            <DataTemplate>
                                <controls:StylePickerItem TextStyle="{Binding TextStyle}" Command="{Binding ElementName=StyleGroup, Path=DataContext.ApplyStyleCommand}" CommandParameter="{Binding TextStyle, RelativeSource={RelativeSource Self}}" ChangeStyleCommand="{Binding ElementName=StyleGroup, Path=DataContext.ChangeStyleCommand}" IsChecked="{Binding IsActive}">
                                    <controls:StylePickerItem.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Delete" CommandParameter="{Binding }" Command="{Binding DataContext.DeleteTextStyleCommand, Source={x:Reference StyleGroup}}"/>
                                        </ContextMenu>
                                    </controls:StylePickerItem.ContextMenu>
                                </controls:StylePickerItem>
                            </DataTemplate>
                        </controls:StylePicker.ItemTemplate>
                    </controls:StylePicker>
                </RibbonGroup>
            </RibbonTab>
        </Ribbon>
        <Grid AllowDrop="True" Background="LightGray">
            <RichTextBox PreviewDragOver="RichTextBox_OnPreviewDragOver" Drop="RichTextBox_OnDrop" VerticalScrollBarVisibility="Visible" Background="White" x:Name="RichTextBox" MaxWidth="850" HorizontalAlignment="Center" IsDocumentEnabled="True" local:FlowDocumentHelper.Document="{Binding Document}">
                <!--<FlowDocument>
                    <Paragraph>
                        <Run Text="RichTextBox"/>
                        <Run Text="R"/>
                    </Paragraph>
                    <Paragraph>
                        <Run Text="RichTextBox1"/>
                    </Paragraph>
                    <Paragraph>
                        <Run Text="RichTextBox2"/>
                    </Paragraph>
                    <controls:FormulaBlock Formula="L = \int_a^b \sqrt[4]{ |\sum_{i,j=1}^ng_{ij}(\gamma(t)) (\frac{d}{dt}x^i\circ\gamma(t) ) (\frac{d}{dt}x^j\circ\gamma(t) ) |}dt"/>
                    <controls:ImageBlock Source="C:\Users\Антон\Pictures\Девушки\iASlTv-yOgM.jpg"></controls:ImageBlock>
                </FlowDocument>-->
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand EventName="SelectionChanged" Command="{Binding TextBoxSelectionChangedCommand}" CommandParameter="{x:Reference RichTextBox}"/>
                    <dxmvvm:EventToCommand EventName="TextChanged" Command="{Binding TextChangedCommand}"/>
                </dxmvvm:Interaction.Behaviors>
            </RichTextBox>
        </Grid>
    </DockPanel>
</Window>